package {	import com.greensock.TimelineMax;	import com.greensock.TweenMax;	import com.greensock.easing.Cubic;	import com.saad.IAnimatable;		import flash.display.MovieClip;	import flash.utils.setTimeout;		import view.components.Background;	import view.components.Game;	import view.components.Instructions;	import view.components.Intro;	import view.components.Language;	import view.components.Leaderboard;	import view.components.Loading;	import view.components.Menu;	import view.components.Registration;	import view.components.Terms;	import view.events.LanguageEvent;
		public class CocaCola extends MovieClip {				public var menu:Menu;		public var brand:MovieClip;		public var container:MovieClip;		public var background:Background;		public var intro:Intro;		public var language:Language;				public var game:Game;		public var instructions:Instructions;		public var leaderboard:Leaderboard;		public var registration:Registration;		public var terms:Terms;				public var theGlass:MovieClip;		public var logo:MovieClip;				private var lang:String = LanguageEvent.EN;		private var timelineMax:TimelineMax;				public function CocaCola() {			intro = new Intro();			game = new Game();			instructions = new Instructions();			leaderboard = new Leaderboard();			registration = new Registration();			terms = new Terms();						registration.alpha = 0;			addChild(registration); 			setTimeout(this.temp, 1000);						background.animateIn();			menu.animateIn();			TweenMax.from(this.logo, 1.2, {delay:2, alpha:0, ease:Cubic.easeInOut});			TweenMax.from(this.brand, 1.2, {delay:1, alpha:0, ease:Cubic.easeInOut});			TweenMax.from(this.language, 1, {delay:1.7, alpha:0, ease:Cubic.easeInOut});			TweenMax.delayedCall(1.2, addIntro);						ApplicationFacade.getInstance().startup(this);		}				function temp():void {			removeChild(registration);			registration.alpha = 1;		}		public function addIntro():void {			container.addChild(intro);			intro.animateIn();		}				public function removeIntro():void {			if(intro.stage) {				intro.animateOut();			}		}				public function addInstructions():void {			if(!instructions.stage) {				container.addChild(instructions);				instructions.animateIn();			}		}				public function removeInstructions():void {			if(instructions.stage) {				instructions.animateOut();			}		}				public function addTerms():void {			container.addChild(terms);			terms.animateIn();		}				public function removeTerms():void {			if(terms.stage) {				terms.animateOut();			}		}				public function addLeaderboard():void {			container.addChild(leaderboard);			leaderboard.animateIn();		}				public function removeLeaderboard():void {			if(leaderboard.stage) {				leaderboard.animateOut();			}		}				public function addRegistration():void {			container.addChild(registration);			registration.animateIn();		}				public function removeRegistration():void {			if(registration.stage) {				registration.animateOut();			}		}				public function addGame():void {			if(!game.stage) {				TweenMax.to(intro, .25, {alpha:0});				container.addChild(game);			}			game.animateIn();		}				public function removeGame():void {			if(game.stage) {				TweenMax.to(intro, .25, {alpha:1});				game.animateOut();			}		}				public function removeComponent(component:IAnimatable):void {			component.reset();			MovieClip(component).parent.removeChild(MovieClip(component));		}				public function layout(event:LanguageEvent):void {			if(this.lang != event.type){								this.lang = event.type;				timelineMax = new TimelineMax({onComplete:layout_completeHandler});								timelineMax.insertMultiple([					TweenMax.to(theGlass, .25, {alpha:0}),					TweenMax.to(logo, .25, {alpha:0})				]);			}		}				private function layout_completeHandler():void {			theGlass.play();			logo.play();						timelineMax.reverse();		}			}
}